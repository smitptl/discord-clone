{"ast":null,"code":"var _jsxFileName = \"/Users/smitpatel/clever-Prog/discord-clone/src/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    channelName: channelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    timestamp: message.timestamp,\n    message: message.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: `Message #${channelName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !channelId,\n    className: \"chat__inputButton\",\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__inputIcons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardGiftcardIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(GifIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(EmojiEmotionsIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/smitpatel/clever-Prog/discord-clone/src/Chat.js"],"names":["React","useEffect","useState","ChatHeader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","selectUser","useSelector","selectChannelId","selectChannelName","db","firebase","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction Chat() {\n    const user = useSelector(selectUser);\n    const channelId = useSelector(selectChannelId);\n    const channelName = useSelector(selectChannelName);\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n   useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n   }, [channelId]);\n    \n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            user: user,\n        });\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className=\"chat\">\n            <ChatHeader channelName={channelName}/>\n            <div className=\"chat__messages\">\n                {messages.map(( message ) => (\n                    <Message\n                        timestamp={message.timestamp}\n                        message={message.message}\n                        \n                    />\n                ))}\n            </div>\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize=\"large\" />\n                <form>\n                    <input\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        placeholder={`Message #${channelName}`} />\n                    <button\n                        disabled={!channelId}\n                        className=\"chat__inputButton\"\n                        type=\"submit\"\n                        onClick={sendMessage}\n                    >Send Message\n                    </button>\n                </form>\n                <div className=\"chat__inputIcons\">\n                    <CardGiftcardIcon fontSize=\"large\" />\n                    <GifIcon fontSize=\"large\" />\n                    <EmojiEmotionsIcon fontSize=\"large\" />\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}