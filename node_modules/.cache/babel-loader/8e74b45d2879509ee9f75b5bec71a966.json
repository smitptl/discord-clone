{"ast":null,"code":"var _jsxFileName = \"/Users/smitpatel/clever-Prog/discord-clone/src/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport db from './firebase';\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, []);\n\n  const sendMessage = e => {\n    e.pre;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    channelName: channelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: `Message #${channelName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !channelId,\n    className: \"chat__inputButton\",\n    type: \"submit\",\n    onClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__inputIcons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardGiftcardIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(GifIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(EmojiEmotionsIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/smitpatel/clever-Prog/discord-clone/src/Chat.js"],"names":["React","useEffect","useState","ChatHeader","AddCircleIcon","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Message","selectUser","useSelector","selectChannelId","selectChannelName","db","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","pre","message","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { selectUser } from './features/userSlice';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport db from './firebase';\n\nfunction Chat() {\n    const user = useSelector(selectUser);\n    const channelId = useSelector(selectChannelId);\n    const channelName = useSelector(selectChannelName);\n    const [input, setInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n   useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n   }, []);\n    \n    const sendMessage = (e) => {\n        e.pre\n    }\n\n    return (\n        <div className=\"chat\">\n            <ChatHeader channelName={channelName}/>\n            <div className=\"chat__messages\">\n                {messages.map(( message ) => (\n                <Message />\n                ))}\n            </div>\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize=\"large\" />\n                <form>\n                    <input\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        placeholder={`Message #${channelName}`} />\n                    <button\n                        disabled={!channelId}\n                        className=\"chat__inputButton\"\n                        type=\"submit\"\n                        onClick\n                    \n                    >Send Message</button>\n                </form>\n                <div className=\"chat__inputIcons\">\n                    <CardGiftcardIcon fontSize=\"large\" />\n                    <GifIcon fontSize=\"large\" />\n                    <EmojiEmotionsIcon fontSize=\"large\" />\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}